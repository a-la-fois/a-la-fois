services:
  message-proxy-1:
    container_name: messageProxy1
    depends_on:
      - kafka
      - doc-handler-1
      - doc-handler-2
    build:
      context: .
      args:
        - BUILD_CONTEXT=messageProxy
      target: messageProxy
    ports:
      - "3000:3000"
    environment:
      - KAFKA_HOSTS=kafka:9092
  message-proxy-1-dapr:
    container_name: mp1-dapr
    image: "daprio/daprd:edge"
    depends_on:
      - message-proxy-1
      - placement
    command: [
        "./daprd",
        "--app-id",
        "docHandler",
        "--app-protocol",
        "http",
        "--app-port",
        "3000",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--components-path",
        "./components",
      ]
    volumes:
      - "./daprComponents/complete/:/components"
    network_mode: "service:message-proxy-1"

  message-proxy-2:
    container_name: messageProxy2
    depends_on:
      - kafka
      - doc-handler-1
      - doc-handler-2
    build:
      context: .
      args:
        - BUILD_CONTEXT=messageProxy
      target: messageProxy
    environment:
      - KAFKA_HOSTS=kafka:9092
    ports:
      - "3001:3000"
  message-proxy-2-dapr:
    container_name: mp2-dapr
    image: "daprio/daprd:edge"
    depends_on:
      - message-proxy-2
      - placement
    command: [
        "./daprd",
        "--app-id",
        "docHandler",
        "--app-protocol",
        "http",
        "--app-port",
        "3000",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--components-path",
        "./components",
      ]
    volumes:
      - "./daprComponents/complete/:/components"
    network_mode: "service:message-proxy-2"

  doc-handler-1:
    container_name: docHandler1
    build:
      context: .
      args:
        - BUILD_CONTEXT=docHandler
      target: docHandler
    environment:
      - DAPR_PORT=3500
      - DAPR_HOST=127.0.0.1
      - SERVER_HOST=docHandler
      - SERVER_PORT=3000
      - MONGO_URI=mongodb://mongo:27017/a-la-fois
  doc-handler-1-dapr:
    container_name: docHandler-dapr-1
    image: "daprio/daprd:edge"
    depends_on:
      - doc-handler-1
      - redis
      - placement
    command: [
        "./daprd",
        "--app-id",
        "docHandler",
        "--app-protocol",
        "http",
        "--app-port",
        "3000",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--components-path",
        "./components",
      ]
    volumes:
      - "./daprComponents/complete/:/components"
    network_mode: "service:doc-handler-1"

  doc-handler-2:
    container_name: docHandler2
    build:
      context: .
      args:
        - BUILD_CONTEXT=docHandler
      target: docHandler
    environment:
      - DAPR_PORT=3500
      - DAPR_HOST=127.0.0.1
      - SERVER_HOST=docHandler
      - SERVER_PORT=3000
      - MONGO_URI=mongodb://mongo:27017/a-la-fois
  doc-handler-2-dapr:
    container_name: docHandler-dapr-2
    image: "daprio/daprd:edge"
    depends_on:
      - doc-handler-2
      - redis
      - placement
    command: [
        "./daprd",
        "--app-id",
        "docHandler",
        "--app-protocol",
        "http",
        "--app-port",
        "3000",
        "--placement-host-address",
        "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
        "--components-path",
        "./components",
      ]
    volumes:
      - "./daprComponents/complete/:/components"
    network_mode: "service:doc-handler-2"

  api:
    container_name: api
    build:
      context: .
      args:
        - BUILD_CONTEXT=api
    environment:
      - SERVER_PORT=8000
      - MONGO_URI=mongodb://mongo:27017/a-la-fois

  zookeeper:
    container_name: zookeeper
    image: "bitnami/zookeeper:latest"
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    container_name: kafka
    image: "bitnami/kafka:latest"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

  redis:
    container_name: redis
    image: redis:7.0.2-alpine

  mongo:
    container_name: mongo
    image: mongo:5.0.12

  placement:
    image: "daprio/dapr"
    command: ["./placement", "--port", "50006"]
    ports:
      - "50006:50006"
